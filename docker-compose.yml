version: "3.1"

services:

  plex:
    image: plexinc/pms-docker
    container_name: plex
    volumes:
      - "${APP_DATA}/plex:/config"
      - "${MEDIA_STORAGE}:/data"
    network_mode: host
    environment:
      - TZ=Europe/London
    restart: unless-stopped

  airsonic:
    image: linuxserver/airsonic
    container_name: airsonic
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - "${APP_DATA}/airsonic:/config"
      - "${MEDIA_STORAGE}/music:/music"
      - "${MEDIA_STORAGE}/playlists:/playlists"
    ports:
      - 4040:4040
    restart: unless-stopped

  syncthing:
    image: linuxserver/syncthing
    container_name: syncthing
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - UMASK_SET=022
    volumes:
      - "${APP_DATA}/syncthing:/config"
      - /mnt/data/backup:/data1
    ports:
      - 8384:8384
      - 22000:22000
      - 21027:21027/udp
    restart: unless-stopped

  # collectd:
  #   image: quay.io/signalfuse/collectd
  #   network_mode: host
  #   privileged: true
  #   depends_on:
  #     - influxdb
  #   volumes:
  #     - "${APP_DATA}/collectd:/etc/collectd/managed_config"
  #   environment:
  #     - DISABLE_SFX_PLUGIN=True
  #     - SF_API_TOKEN=test
  #     - FQDN_LOOKUP=true

  # influxdb:
  #   image: influxdb:latest
  #   ports:
  #     - 8086:8086 # http API port
  #     - 2003:2003 # Graphite port
  #   volumes:
  #     - "${APP_DATA}/influxdb:/var/lib/influxdb"
  #   environment:
  #     - INFLUXDB_GRAPHITE_ENABLED=true
  #     - INFLUXDB_DB=app_metrics

  # grafana:
  #   image: grafana/grafana
  #   ports:
  #     - 3001:3000

  # deluge:
  #   image: linuxserver/deluge
  #   container_name: deluge
  #   # network_mode: host
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=timezone
  #     - UMASK_SET=022 #optional
  #     - DELUGE_LOGLEVEL=error #optional
  #   volumes:
  #     - "${APP_DATA}/deluge:/config"
  #     - "${MEDIA_STORAGE}/downloads:/downloads"
  #   restart: unless-stopped

  # jackett:
  #   image: linuxserver/jackett
  #   container_name: jackett
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Europe/London
  #     # - RUN_OPTS=run options here #optional
  #   volumes:
  #     - "${APP_DATA}/jackett:/config"
  #     - "${MEDIA_STORAGE}/downloads:/downloads"
  #   ports:
  #     - 9117:9117
  #   restart: unless-stopped
